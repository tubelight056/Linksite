{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prem\\\\Documents\\\\Projects\\\\Linksite-production\\\\src\\\\components\\\\modelUp\\\\modelUpForAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./modelUp.css\";\nimport exitIcon from \"./exitIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModelUpForAdd = props => {\n  _s();\n\n  const [link, setLink] = useState();\n  const [placeHolder, setPlaceHolder] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outerModelUpScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"modeulUpExitIcon\",\n        src: exitIcon,\n        alt: \"exit\",\n        onClick: () => {\n          props.onReturnCallBack();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerModelUpScreen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eachBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"questionLabel\",\n            children: \"Link Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => {\n              setPlaceHolder(e.target.value);\n            },\n            placeholder: \"Type Link name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eachBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"questionLabel\",\n            children: \"Link:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            onChange: e => {\n              setLink(e.target.value);\n            },\n            placeholder: \"Paste your Link Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Submit\",\n          className: \"modelButton\",\n          onClick: () => {\n            if (link !== undefined && link !== \"\" && placeHolder !== \"\" && placeHolder !== undefined) {\n              props.onSubmitCallBack({\n                link,\n                placeHolder\n              });\n            } else {\n              props.onErrorCallBack(\"All fields are required\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModelUpForAdd, \"iSQH3vk3yYpXZJ/O+jhWQFSp9yo=\");\n\n_c = ModelUpForAdd;\nexport default ModelUpForAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelUpForAdd\");","map":{"version":3,"sources":["C:/Users/Prem/Documents/Projects/Linksite-production/src/components/modelUp/modelUpForAdd.js"],"names":["React","useState","ModelUpForAdd","props","link","setLink","placeHolder","setPlaceHolder","exitIcon","onReturnCallBack","e","target","value","undefined","onSubmitCallBack","onErrorCallBack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,GAAG,EAAEO,QAFP;AAGE,QAAA,GAAG,EAAC,MAHN;AAIE,QAAA,OAAO,EAAE,MAAM;AACbL,UAAAA,KAAK,CAACM,gBAAN;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACfH,cAAAA,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,aAJH;AAKE,YAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,QAAQ,EAAGF,CAAD,IAAO;AACfL,cAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,aAJH;AAKE,YAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAsBE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,SAAS,EAAC,aAHZ;AAIE,UAAA,OAAO,EAAE,MAAM;AACb,gBACER,IAAI,KAAKS,SAAT,IACAT,IAAI,KAAK,EADT,IAEAE,WAAW,KAAK,EAFhB,IAGAA,WAAW,KAAKO,SAJlB,EAKE;AACAV,cAAAA,KAAK,CAACW,gBAAN,CAAuB;AAAEV,gBAAAA,IAAF;AAAQE,gBAAAA;AAAR,eAAvB;AACD,aAPD,MAOO;AACLH,cAAAA,KAAK,CAACY,eAAN,CAAsB,yBAAtB;AACD;AACF;AAfH;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CA1DD;;GAAMb,a;;KAAAA,a;AA4DN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./modelUp.css\";\r\nimport exitIcon from \"./exitIcon.svg\";\r\nconst ModelUpForAdd = (props) => {\r\n  const [link, setLink] = useState();\r\n\r\n  const [placeHolder, setPlaceHolder] = useState();\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"outerModelUpScreen\">\r\n        <img\r\n          className=\"modeulUpExitIcon\"\r\n          src={exitIcon}\r\n          alt=\"exit\"\r\n          onClick={() => {\r\n            props.onReturnCallBack();\r\n          }}\r\n        />\r\n        <div className=\"innerModelUpScreen\">\r\n          <div className=\"eachBox\">\r\n            <h3 className=\"questionLabel\">Link Name:</h3>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setPlaceHolder(e.target.value);\r\n              }}\r\n              placeholder=\"Type Link name\"\r\n            />\r\n          </div>\r\n          <div className=\"eachBox\">\r\n            <h3 className=\"questionLabel\">Link:</h3>\r\n            <input\r\n              type=\"url\"\r\n              onChange={(e) => {\r\n                setLink(e.target.value);\r\n              }}\r\n              placeholder=\"Paste your Link Here\"\r\n            />\r\n          </div>\r\n\r\n          <input\r\n            type=\"button\"\r\n            value=\"Submit\"\r\n            className=\"modelButton\"\r\n            onClick={() => {\r\n              if (\r\n                link !== undefined &&\r\n                link !== \"\" &&\r\n                placeHolder !== \"\" &&\r\n                placeHolder !== undefined\r\n              ) {\r\n                props.onSubmitCallBack({ link, placeHolder });\r\n              } else {\r\n                props.onErrorCallBack(\"All fields are required\");\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelUpForAdd;\r\n"]},"metadata":{},"sourceType":"module"}